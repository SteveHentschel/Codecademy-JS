// Hand Constructor with indexed array
function Hand ()   {
    var cards = [];                      
      cards[0] = deal();                    // Deal first two cards  
      cards[1] = deal();
    
    this.getHand = function() {             //  (never used ?)
        return cards;
    };
    this.printHand = function() {           // print hand nicely, with suit and rank
        var suits = ['clubs','diamonds','hearts','spades'];
        var ranks = ['A','2','3','4','5','6','7','8','9','10','J','Q','K'];
        var rString = "";
        
        for(i=0; i<cards.length; i++) {     // use card.getNumber and get.Suit to find right array
            rString += ranks[cards[i].getNumber()-1]+" of "+suits[cards[i].getSuit()-1]+", ";
        }
        return rString;
    };
    
    this.score = function() {                               // add cards for hand score
        var sum = 0;
        var aces = 0;
        for(i=0; i<cards.length; i++) {
            if (cards[i].getValue() === 11) aces++;         // if card is an Ace, keep track
            sum += cards[i].getValue();                     // sum up cards values
        }
        while (aces > 0) {                              // if Aces were present,
            if (sum > 21) sum -= 10;                    //  change them to one if score over 21
            aces--;
        }
        return sum;
    };
    
    this.hitMe = function() {                           // add a card to hand if hit is taken
        cards.push(deal());
    };
}

// Card Constructor
function Card (suit, num)   {
    var cSuit = suit;                   // 1=clubs, 2=diamonds, 3=hearts, 4=spades
    var cNum = num;                     // 1-13
    
    this.getSuit = function() {
        return cSuit;
    };
    this.getNumber = function() {
        return cNum;
    };
    this.getValue = function() {        // Set value for each card/face cards
        if (cNum >10) return 10;
        if (cNum === 1) return 11;      //  Aces start at 11
        else return cNum;
    };
}
// Deal function - returns one random card (suit and number)
var deal = function(){
        var randNum = Math.floor(Math.random() * 13) + 1;
        var randSuit = Math.floor(Math.random() * 4) + 1;
        
        return new Card(randSuit, randNum);
};
var playAsUser = function() {           // user can hit until score exceeds 21
    myHand = new Hand();                //   but probably shouldn't  ;)
    
    while (confirm(myHand.printHand()+" Score = "+myHand.score()+"\n"+"Want to hit ?")) {
        myHand.hitMe();
        if (myHand.score() > 21) {
            console.log("Busted !");
            break;
        }
    }
    console.log("My  Hand: ",myHand.printHand());       // Show user hand
    return myHand;
};

var playAsDealer = function() {         // dealer has to hit until score reaches 17 or higher
    dHand = new Hand();
    
    while (dHand.score() < 17) {
        dHand.hitMe();
    }
    console.log("Dlr Hand: ",dHand.printHand());        // Show dealer hand
    return dHand;
};
var declareWinner = function(usrHand, dlrHand) {        // Decide who won
    uScore = usrHand.score();
    dScore = dlrHand.score();
    
    if (uScore > 21) {                                  // first check if user busted
        if (dScore > 21) return "You tied!";            //   if dealer busted, then tie (wrong)
        else return "You lose!";                        //   if dealer didn't bust, you lose
    }
    else if (dScore > 21) return "You win!";            //  then if dealer busted, you win
    else {
        if (uScore > dScore) return "You win!";         //  else, just compare scores
        else if (uScore < dScore) return "You lose!";
        else return "You tied!"; 
    }    
};
var playGame = function() {
    console.log(declareWinner(playAsUser(),playAsDealer())); 
};

playGame();
